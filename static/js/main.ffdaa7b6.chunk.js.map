{"version":3,"sources":["utils/logger.js","reducers/tasksReducer/actions.js","reducers/tasksReducer/tasksReducer.js","store/rootReducer.js","utils/storage.js","utils/delay.js","api/config.js","api/utils.js","api/tasks/createTask.js","api/tasks/fetchTasks.js","api/tasks/deleteTask.js","reducers/tasksReducer/selectors.js","sagas/tasksSaga.js","helpers/subTaskHelpers.js","api/subTasks/deleteSubtask.js","api/subTasks/fetchSubTasks.js","sagas/subTasksSaga.js","store/rootSaga.js","store/index.js","config/routes.js","components/templates/Default/Default.styles.js","components/templates/Default/Default.js","components/atoms/Button/Button.styles.js","components/atoms/Button/Button.js","constants/tasksConstants.js","components/atoms/SortButton/SortButton.styles.js","components/atoms/SortButton/SortButton.js","components/atoms/TextInput/TextInput.styles.js","components/atoms/TextInput/TextInput.js","components/atoms/PageHeader/PageHeader.js","components/atoms/List/List.styles.js","components/atoms/List/List.js","components/molecules/SubTask/SubTask.styles.js","components/molecules/SubTask/SubTask.js","components/organisms/SubTasksList/SubTasksList.js","helpers/tasksHelpers.js","components/organisms/Task/Task.styles.js","components/organisms/Task/Task.js","components/molecules/SortTasksButtons/SortTasksButtons.styles.js","components/molecules/SortTasksButtons/SortTasksButtons.js","components/organisms/TaskList/hooks/useSorting.js","components/organisms/TaskList/TaskList.js","components/organisms/TaskForm/TaskForm.styles.js","components/organisms/TaskForm/TaskForm.js","modules/Tasks/Tasks.js","routes/Home/Home.js","routes/NotFound/NotFound.js","routes/index.js","styles.js","App.js","index.js"],"names":["logFunction","window","alert","logError","args","join","tasksSetAction","createAction","taskCreateAction","tasksFetchAction","subTasksFetchAction","subTasksSetAction","subTaskDeleteAction","subTaskDeleteSucceedAction","tasksReducer","createReducer","tasksList","allSubTasks","builder","addCase","state","payload","taskId","subTasks","history","createBrowserHistory","reducer","combineReducers","router","connectRouter","tasks","Storage","constructor","key","this","localStorage","getItem","setItem","JSON","stringify","get","parse","set","value","callback","Promise","resolve","setTimeout","labels","Array","from","length","map","faker","lorem","word","getRandomNumber","min","max","Math","floor","random","delay","title","task","id","datatype","uuid","createTime","Date","now","subTaskList","sentence","Set","targetTask","find","Error","filter","tasksListSelector","subTasksSelector","fetchTasksSaga","call","fetchTasks","put","createTaskSaga","newTask","createTask","deleteTaskSaga","deleteTask","error","deleteEmptyTaskSaga","subTask","subTaskId","subTasksList","isLastSubTask","select","watchTasksActions","takeLatest","takeEvery","t","st","fetchSubTasksSaga","fetchSubTasks","deleteSubTaskSaga","deleteSubtask","watchSubTasksActions","initApp","routerMiddleware","createRouterMiddleware","sagaMiddleware","createSagaMiddleware","onError","sagaStack","middlewares","getDefaultMiddleware","thunk","serializableCheck","immutableCheck","warnAfter","store","configureStore","rootReducer","middleware","enhancers","preloadedState","devTools","trace","run","all","routes","BorderedCenterArea","styled","div","Default","children","Wrapper","button","Button","props","SortTypes","CREATE_TIME","TITLE","SortButton","SortButtonTitles","sortType","sortBy","onSortClick","useCallback","onClick","Input","input","attrs","type","TextInput","initialValue","placeholder","onValueChange","setValue","useState","handleTextInputChange","event","target","useEffect","onChange","defaultProps","Header","ListContainter","ul","List","items","ItemComponent","item","Label","li","LabelsList","RemoveButton","SubTask","dispatch","useDispatch","onRemoveClick","label","className","PropTypes","string","isRequired","arrayOf","SubTasksList","safeSubTasksSelector","useSelector","formatTimeForRender","timeInMilliseconds","date","toLocaleDateString","toLocaleTimeString","TaskWrapper","TaskName","span","number","Task","onViewSubtasksClick","ButtonContainer","SortTasksButtons","Object","values","comparatorsBySortType","a","b","useSorting","setSortType","BY_CREATE_DATE","sortedItems","sort","sortItemsImmutably","TasksList","TaskFormContainer","TaskForm","initialTitle","setTitle","onCreate","TasksPage","PageHeader","TaskList","Home","Tasks","NotFound","to","Routes","path","component","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffdaa7b6.chunk.js","sourcesContent":["const logFunction = window.alert; // console.error (for development from Tablet purpose only)\n\nconst logError = (...args) => {\n  logFunction(args.join(' '));\n};\n\nexport default logError;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const tasksSetAction = createAction('tasks/set');\nexport const taskCreateAction = createAction('task/create');\nexport const tasksFetchAction = createAction('tasks/fetch');\n\nexport const subTasksFetchAction = createAction('subtasks/fetch');\nexport const subTasksSetAction = createAction('subtasks/set');\nexport const subTaskDeleteAction = createAction('subTask/delete');\n\nexport const subTaskDeleteSucceedAction = createAction('subTask/delete/success');\n","import { createReducer } from '@reduxjs/toolkit';\nimport { tasksSetAction, subTasksSetAction } from './actions';\n\nconst initialTasksState = {\n  tasksList: [],\n  allSubTasks: {},\n};\n\nconst tasksReducer = createReducer(initialTasksState, builder => {\n  builder.addCase(tasksSetAction, (state, { payload }) => ({\n    ...state,\n    tasksList: payload,\n  }));\n  builder.addCase(subTasksSetAction, (state, { payload }) => ({\n    ...state,\n    allSubTasks: {\n      ...state.allSubTasks,\n      [payload.taskId]: payload.subTasks,\n    },\n  }));\n});\n\nexport default tasksReducer;\n","import { createBrowserHistory } from 'history'\nimport { combineReducers } from '@reduxjs/toolkit'\nimport { connectRouter } from 'connected-react-router'\nimport tasksReducer from 'reducers/tasksReducer/tasksReducer';\n\nconst history = createBrowserHistory();\n\nconst reducer = combineReducers({\n  router: connectRouter(history),\n  tasks: tasksReducer,\n});\n\nexport { history }\n\nexport default reducer\n","class Storage {\n  key = null\n\n  constructor(key) {\n    this.key = key\n    if (!localStorage.getItem(this.key)) localStorage.setItem(this.key, JSON.stringify([]))\n  }\n\n  get() {\n    try {\n      return JSON.parse(localStorage.getItem(this.key))\n    } catch {\n      return null\n    }\n  }\n\n  set(value) {\n    localStorage.setItem(this.key, JSON.stringify(value))\n  }\n}\n\nexport default {\n  tasks: new Storage('tasks'),\n  subTasks: new Storage('subTasks'),\n}\n","export default callback =>\n  (...args) =>\n    new Promise(resolve => setTimeout(() => resolve(callback(...args)), 1500))\n","import faker from 'faker'\n\nexport const labels = Array.from({ length: 10 }).map(() => faker.lorem.word())\n","export const getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min\n","import faker from 'faker';\nimport Storage from 'utils/storage';\nimport delay from 'utils/delay';\nimport { labels } from '../config';\nimport { getRandomNumber } from '../utils';\n\nexport default delay(({ title }) => {\n  const tasks = Storage.tasks.get();\n  const subTasks = Storage.subTasks.get();\n  const task = {\n    id: faker.datatype.uuid(),\n    createTime: Date.now(),\n    title,\n  };\n  const subTaskList = Array.from({ length: getRandomNumber(1, 10) }).map(() => ({\n    id: faker.datatype.uuid(),\n    taskId: task.id,\n    title: faker.lorem.sentence(),\n    labels: [\n      ...new Set(\n        Array.from({ length: getRandomNumber(1, 5) }).map(() => labels[getRandomNumber(0, 9)]),\n      ),\n    ],\n  }));\n\n  Storage.tasks.set([...tasks, task]);\n  Storage.subTasks.set([...subTasks, ...subTaskList]);\n\n  return task;\n});\n","import Storage from 'utils/storage'\nimport delay from 'utils/delay'\n\nexport default delay(() => Storage.tasks.get())\n","import Storage from 'utils/storage';\nimport delay from 'utils/delay';\n\nexport default delay(taskId => {\n  const tasks = Storage.tasks.get();\n\n  const allTasks = Storage.tasks.get();\n  const targetTask = allTasks.find(task => task.id === taskId);\n\n  if (!targetTask) {\n    throw new Error(`Task ${taskId} wasn't found`);\n  }\n\n  Storage.tasks.set([...tasks.filter(task => task.id !== taskId)]);\n\n  return targetTask;\n});\n","export const tasksListSelector = state => state.tasks.tasksList;\n\nexport const subTasksSelector = (state, taskId) => state.tasks.allSubTasks[taskId] || [];\n","import { put, takeEvery, takeLatest, call, select } from 'redux-saga/effects';\nimport { fetchTasks, createTask, deleteTask } from 'api/tasks';\nimport {\n  tasksFetchAction,\n  tasksSetAction,\n  taskCreateAction,\n  subTaskDeleteSucceedAction,\n} from 'reducers/tasksReducer/actions';\nimport { subTasksSelector } from 'reducers/tasksReducer/selectors';\nimport { isLastSubTask } from 'helpers/subTaskHelpers';\nimport logError from 'utils/logger';\n\nexport function* fetchTasksSaga() {\n  const tasks = yield call(fetchTasks);\n\n  yield put(tasksSetAction(tasks));\n}\n\nexport function* createTaskSaga({ payload: newTask }) {\n  yield call(createTask, newTask);\n  yield call(fetchTasksSaga);\n}\n\nexport function* deleteTaskSaga({ payload: taskId }) {\n  try {\n    yield call(deleteTask, taskId);\n    yield call(fetchTasksSaga);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    logError('Delete task failed:', error);\n  }\n}\n\nexport function* deleteEmptyTaskSaga({ payload: subTask }) {\n  const { taskId, id: subTaskId } = subTask;\n  const subTasksList = yield select(subTasksSelector, taskId);\n\n  if (isLastSubTask(subTaskId, subTasksList)) {\n    yield call(deleteTaskSaga, { payload: taskId });\n  }\n}\n\nexport function* watchTasksActions() {\n  yield takeLatest(tasksFetchAction, fetchTasksSaga);\n  yield takeEvery(taskCreateAction, createTaskSaga);\n  yield takeEvery(subTaskDeleteSucceedAction, deleteEmptyTaskSaga);\n}\n","export const isLastSubTask = (subTaskId, subTasksList) =>\n  !subTasksList.length ||\n  (subTasksList.length === 1 && !!subTasksList.find(({ id }) => id === subTaskId));\n","import Storage from 'utils/storage';\nimport delay from 'utils/delay';\n\nexport default delay(subTaskId => {\n  const subTasks = Storage.subTasks.get();\n  const subTask = subTasks.find(t => t.id === subTaskId);\n\n  if (subTask) {\n    Storage.subTasks.set(subTasks.filter(st => st.id !== subTaskId));\n\n    return subTask;\n  }\n\n  throw new Error(`SubTask [${subTaskId}] not found`);\n});\n","import Storage from 'utils/storage'\nimport delay from 'utils/delay'\n\nexport default delay(taskId => {\n  const subTasks = Storage.subTasks.get()\n\n  return subTasks.filter(subTask => subTask.taskId === taskId)\n})\n","import { put, takeEvery, call } from 'redux-saga/effects';\nimport { fetchSubTasks, deleteSubtask } from 'api/subTasks';\nimport {\n  subTasksFetchAction,\n  subTasksSetAction,\n  subTaskDeleteAction,\n  subTaskDeleteSucceedAction,\n} from 'reducers/tasksReducer/actions';\nimport logError from 'utils/logger';\n\nexport function* fetchSubTasksSaga({ payload: taskId }) {\n  const subTasks = yield call(fetchSubTasks, taskId);\n\n  yield put(subTasksSetAction({ taskId, subTasks }));\n}\n\nexport function* deleteSubTaskSaga({ payload: subTask }) {\n  try {\n    const { id: subTaskId, taskId } = subTask;\n\n    yield call(deleteSubtask, subTaskId);\n    // on success delete:\n    yield put(subTaskDeleteSucceedAction(subTask));\n    yield call(fetchSubTasksSaga, { payload: taskId });\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    logError('Delete subTask request failed:', error);\n  }\n}\n\nexport function* watchSubTasksActions() {\n  yield takeEvery(subTasksFetchAction, fetchSubTasksSaga);\n  yield takeEvery(subTaskDeleteAction, deleteSubTaskSaga);\n}\n","import { all, takeLatest, call } from 'redux-saga/effects';\nimport { fetchTasksSaga, watchTasksActions } from 'sagas/tasksSaga';\nimport { watchSubTasksActions } from 'sagas/subTasksSaga';\n\nfunction* initApp() {\n  yield call(fetchTasksSaga);\n}\n\nexport default function* () {\n  yield takeLatest('app/init', initApp);\n  yield all([watchTasksActions(), watchSubTasksActions()]);\n}\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { routerMiddleware as createRouterMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport logError from 'utils/logger';\nimport rootReducer, { history } from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst routerMiddleware = createRouterMiddleware(history);\nconst sagaMiddleware = createSagaMiddleware({\n  onError: (error, { sagaStack }) => {\n    logError('Something came up', error, sagaStack);\n  },\n});\nconst initialState = {};\nconst enhancers = [];\nconst middlewares = [\n  ...getDefaultMiddleware({\n    thunk: false,\n    serializableCheck: false,\n    immutableCheck: { warnAfter: 300 },\n  }),\n  routerMiddleware,\n  sagaMiddleware,\n];\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: middlewares,\n  enhancers,\n  preloadedState: initialState,\n  devTools: { trace: true },\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport { history };\n\nexport default store;\n","export const routes = {\n  root: () => '/',\n}\n","import styled from 'styled-components';\n\nexport const BorderedCenterArea = styled.div`\n  width: 500px;\n  margin: 20px auto;\n  padding: 20px;\n  max-width: 100%;\n  border: 1px dashed #a5a2a2;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BorderedCenterArea } from './Default.styles';\n\nconst Default = ({ children }) => <BorderedCenterArea>{children}</BorderedCenterArea>;\n\nDefault.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Default;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.button`\n  padding: 4px 6px;\n\n  border-radius: 1em;\n  background-color: #96fbe4;\n\n  border: none;\n`;\n","import React from 'react'\nimport { Wrapper } from './Button.styles'\n\nconst Button = props => <Wrapper {...props} />\n\nexport default Button\n","export const SortTypes = {\n  CREATE_TIME: 'BY_CREATE_TIME',\n  TITLE: 'BY_TITLE',\n};\n","import styled from 'styled-components';\nimport { Button } from 'components/atoms';\n\nexport const SortButton = styled(Button)`\n  & {\n    background-color: #ffe082;\n    margin-right: 5px;\n  }\n`;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { SortTypes } from 'constants/tasksConstants';\nimport { SortButton as SortButtonStyled } from './SortButton.styles';\n\nconst SortButtonTitles = {\n  [SortTypes.CREATE_TIME]: 'Sort by create-date',\n  [SortTypes.TITLE]: 'Sort by title',\n};\n\nexport const SortButton = ({ sortType, sortBy }) => {\n  // I'd rather remove useCallback, as it doesn't make here an optimization: https://kentcdodds.com/blog/usememo-and-usecallback\n  // but I keed it, since it's an configured code-style by eslint-rule: react-perf/jsx-no-new-function-as-prop\n  const onSortClick = useCallback(() => sortBy(sortType), [sortBy, sortType]);\n\n  return <SortButtonStyled onClick={onSortClick}>{SortButtonTitles[sortType]}</SortButtonStyled>;\n};\n\nSortButton.propTypes = {\n  sortType: PropTypes.string.isRequired,\n  sortBy: PropTypes.func.isRequired,\n};\n\nexport default SortButton;\n","import styled from 'styled-components';\n\nexport const Input = styled.input.attrs({ type: 'text' })`\n  border-radius: 1em;\n  border: 1px solid #656565;\n\n  padding: 2px 5px;\n`;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from './TextInput.styles';\n\nconst TextInput = ({ value: initialValue, placeholder, onValueChange }) => {\n  const [value, setValue] = useState(initialValue);\n  // I'd rather remove useCallback, as it doesn't make here an optimization: https://kentcdodds.com/blog/usememo-and-usecallback\n  // but I keed it, since it's an configured code-style by eslint-rule: react-perf/jsx-no-new-function-as-prop\n  const handleTextInputChange = useCallback(\n    event => {\n      setValue(event.target.value);\n      onValueChange(event.target.value);\n    },\n    [onValueChange],\n  );\n\n  // allow rewriting title by parent: subscribe on its change\n  useEffect(() => setValue(initialValue), [initialValue]);\n\n  return <Input placeholder={placeholder} value={value} onChange={handleTextInputChange} />;\n};\n\nTextInput.defaultProps = {\n  value: '',\n  placeholder: '',\n};\n\nTextInput.propTypes = {\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  onValueChange: PropTypes.func.isRequired,\n};\n\nexport default TextInput;\n","import React from 'react'\n\nconst Header = () => (<h1>Processes</h1>);\n\nexport default Header;","import styled from 'styled-components';\n\nexport const ListContainter = styled.ul`\n  margin-left: 10px;\n  margin-bottom: 5px;\n\n  .item {\n    margin-bottom: 5px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListContainter } from './List.styles';\n\nconst List = ({ items, ItemComponent }) => (\n  <ListContainter>\n    {items.map(item => (\n      <li key={item.id}>\n        <ItemComponent {...item} />\n      </li>\n    ))}\n  </ListContainter>\n);\n\nconst ListItemShape = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n});\n\nList.propTypes = {\n  items: PropTypes.arrayOf(ListItemShape).isRequired,\n  ItemComponent: PropTypes.elementType.isRequired,\n};\n\nexport default List;\n","import styled from 'styled-components';\n\nexport const Label = styled.li`\n  display: inline-block;\n  margin-right: 5px;\n  padding: 0 5px;\n\n  border-radius: 1em;\n  background-color: #9c9cc7;\n  color: #fff;\n`;\n\nexport const LabelsList = styled.ul`\n  margin: 3px 0 10px;\n`;\n\nexport const RemoveButton = styled.input.attrs({ type: 'checkbox' })`\n  margin-right: 5px;\n`;\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { subTaskDeleteAction } from 'reducers/tasksReducer/actions';\nimport { Label, LabelsList, RemoveButton } from './SubTask.styles';\n\nconst SubTask = ({ id, title, labels, taskId }) => {\n  const dispatch = useDispatch();\n  // I'd rather remove useCallback, as it doesn't make here an optimization: https://kentcdodds.com/blog/usememo-and-usecallback\n  // but I keed it, since it's an configured code-style by eslint-rule: react-perf/jsx-no-new-function-as-prop\n  const onRemoveClick = useCallback(\n    () => dispatch(subTaskDeleteAction({ id, taskId })),\n    [dispatch, id, taskId],\n  );\n\n  return (\n    <>\n      <RemoveButton onClick={onRemoveClick} />\n      <span id={id}>{title}</span>\n      <LabelsList>\n        {labels.map(label => (\n          <Label key={label} className=\"label\">\n            #{label}\n          </Label>\n        ))}\n      </LabelsList>\n    </>\n  );\n};\n\nSubTask.defaultProps = {\n  labels: [],\n};\n\nexport const SubTaskShape = {\n  id: PropTypes.string.isRequired,\n  taskId: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  labels: PropTypes.arrayOf(PropTypes.string),\n};\n\nSubTask.propTypes = SubTaskShape;\n\nexport default SubTask;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport SubTask from 'components/molecules/SubTask/SubTask';\nimport { subTasksSelector } from 'reducers/tasksReducer/selectors';\nimport { List } from 'components/atoms';\n\nconst SubTasksList = ({ taskId }) => {\n  const safeSubTasksSelector = useCallback(state => subTasksSelector(state, taskId), [taskId]);\n  const subTasks = useSelector(safeSubTasksSelector);\n\n  return <List items={subTasks} ItemComponent={SubTask} />;\n};\n\nSubTasksList.propTypes = {\n  taskId: PropTypes.string.isRequired,\n};\n\nexport default SubTasksList;\n","export const formatTimeForRender = timeInMilliseconds => {\n  const date = new Date(timeInMilliseconds);\n\n  return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`;\n};\n","import styled from 'styled-components';\n\nexport const TaskWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const TaskName = styled.span`\n  flex-basis: 40%;\n  max-width: 40%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Button } from 'components/atoms';\nimport { subTasksFetchAction } from 'reducers/tasksReducer/actions';\nimport SubTasksList from 'components/organisms/SubTasksList/SubTasksList';\nimport { formatTimeForRender } from 'helpers/tasksHelpers';\nimport { TaskWrapper, TaskName } from './Task.styles';\n\nconst Task = ({ title, id, createTime }) => {\n  const dispatch = useDispatch();\n  const onViewSubtasksClick = useCallback(() => dispatch(subTasksFetchAction(id)), [id, dispatch]);\n\n  return (\n    <>\n      <TaskWrapper>\n        <TaskName>{title}</TaskName>\n        <span>{formatTimeForRender(createTime)}</span>\n        <Button onClick={onViewSubtasksClick}>Expand</Button>\n      </TaskWrapper>\n      <SubTasksList taskId={id} />\n    </>\n  );\n};\n\nexport const TaskShape = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  createTime: PropTypes.number.isRequired,\n};\n\nTask.propTypes = TaskShape;\n\nexport default Task;\n","import styled from 'styled-components';\nimport { Button } from 'components/atoms';\n\nexport const SortButton = styled(Button)`\n  & {\n    background-color: #ffe082;\n    margin-right: 5px;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  margin: 5px 0;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SortTypes } from 'constants/tasksConstants';\nimport { SortButton } from 'components/atoms';\nimport { ButtonContainer } from './SortTasksButtons.styles';\n\nconst SortTasksButtons = ({ sortBy }) => (\n  <ButtonContainer>\n    {Object.values(SortTypes).map(sortType => (\n      <SortButton key={sortType} sortBy={sortBy} sortType={sortType} />\n    ))}\n  </ButtonContainer>\n);\n\nSortTasksButtons.propTypes = {\n  sortBy: PropTypes.func.isRequired,\n};\n\nexport default SortTasksButtons;\n","import { useState } from 'react';\nimport { SortTypes } from 'constants/tasksConstants';\n\nconst comparatorsBySortType = {\n  [SortTypes.CREATE_TIME]: (a, b) => a.createTime - b.createTime,\n  [SortTypes.TITLE]: (a, b) => (a.title < b.title ? -1 : 1),\n};\n\nconst sortItemsImmutably = (items, sortType) => {\n  const sortedItems = [...items];\n\n  sortedItems.sort(comparatorsBySortType[sortType]);\n\n  return sortedItems;\n};\n\nconst useSorting = items => {\n  const [sortType, setSortType] = useState(SortTypes.BY_CREATE_DATE);\n  const sortedItems = sortItemsImmutably(items, sortType);\n\n  return { sortedItems, sortBy: setSortType };\n};\n\nexport default useSorting;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Task from 'components/organisms/Task/Task';\nimport { List } from 'components/atoms';\nimport { SortTasksButtons } from 'components/molecules';\nimport { tasksListSelector } from 'reducers/tasksReducer/selectors';\nimport useSorting from './hooks/useSorting';\n\nconst TasksList = () => {\n  const tasks = useSelector(tasksListSelector);\n  const { sortedItems, sortBy } = useSorting(tasks);\n\n  return (\n    <>\n      <SortTasksButtons sortBy={sortBy} />\n      <List items={sortedItems} ItemComponent={Task} />\n    </>\n  );\n};\n\nexport default TasksList;\n","import styled from 'styled-components';\n\nexport const TaskFormContainer = styled.div`\n  & input {\n    margin-right: 5px;\n  }\n`;\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from '../../atoms';\nimport TextInput from '../../atoms/TextInput/TextInput';\nimport { taskCreateAction } from '../../../reducers/tasksReducer/actions';\nimport { TaskFormContainer } from './TaskForm.styles';\n\nconst TaskForm = ({ title: initialTitle }) => {\n  const [title, setTitle] = useState(initialTitle);\n  const dispatch = useDispatch();\n  const onCreate = useCallback(() => {\n    dispatch(taskCreateAction({ title }));\n    setTitle('');\n  }, [title, dispatch]);\n\n  return (\n    <TaskFormContainer>\n      <TextInput value={title} placeholder=\"task title\" onValueChange={setTitle} />\n      <Button onClick={onCreate}>Create</Button>\n    </TaskFormContainer>\n  );\n};\n\nTaskForm.defaultProps = {\n  title: '',\n};\n\nTaskForm.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default TaskForm;\n","import React from 'react';\nimport { TaskList } from 'components/organisms';\nimport PageHeader from '../../components/atoms/PageHeader/PageHeader';\nimport TaskForm from '../../components/organisms/TaskForm/TaskForm';\n\nconst TasksPage = () => (\n  <>\n    <PageHeader />\n    <main>\n      <TaskForm />\n      <TaskList />\n    </main>\n  </>\n);\n\nexport default TasksPage;\n","import React from 'react'\nimport { DefaultTemplate } from 'components/templates'\nimport { Tasks } from 'modules'\n\nconst Home = () => (\n  <DefaultTemplate>\n    <Tasks />\n  </DefaultTemplate>\n)\n\nexport default Home\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { DefaultTemplate } from 'components/templates'\nimport { routes } from 'config/routes'\n\nconst NotFound = () => (\n  <DefaultTemplate>\n    <h1>Page not found</h1>\n    <Link to={routes.root()}>Go to home</Link>\n  </DefaultTemplate>\n)\n\nexport default NotFound\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { routes } from 'config/routes'\nimport Home from './Home/Home'\nimport NotFound from './NotFound/NotFound'\n\nconst Routes = () => (\n  <Switch>\n    <Route path={routes.root()} component={Home} />\n    <Route component={NotFound} />\n  </Switch>\n)\n\nexport default Routes\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n  * {\n    padding: 0;\n    margin: 0;\n    outline: none;\n\n    &,\n    &:before,\n    &:after {\n      box-sizing: border-box;\n    }\n  }\n\n  body {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    font-family: 'Helvetica', sans-serif;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.4;\n  }\n\n  a {\n    text-decoration: none;\n\n    &,\n    &:hover {\n      color: inherit;\n    }\n  }\n\n  p {\n    margin: 0;\n  }\n\n  ul,\n  ol {\n    margin: 0;\n    list-style: none;\n  }\n\n  img {\n    max-width: 100%;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 0;\n  }\n\n  pre {\n    margin: 0;\n  }\n\n  #root {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n  }\n`\n","import React, { useEffect } from 'react';\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport store, { history } from 'store'\nimport Routes from 'routes'\nimport GlobalStyle from './styles';\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch({ type: 'app/init' });\n  }, []);\n\n  return (<>\n    <GlobalStyle />\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <Routes />\n      </ConnectedRouter>\n    </Provider>\n  </>);\n};\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nwindow.logError = alert; // for debugging via Cloud9\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}