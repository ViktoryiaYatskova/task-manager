{"version":3,"sources":["reducers/tasksReducer/actions.js","reducers/tasksReducer/tasksReducer.js","store/rootReducer.js","utils/storage.js","utils/delay.js","api/config.js","api/utils.js","api/tasks/createTask.js","api/tasks/fetchTasks.js","api/tasks/deleteTask.js","reducers/tasksReducer/selectors.js","sagas/tasksSaga.js","helpers/subTaskHelpers.js","api/subTasks/deleteSubtask.js","api/subTasks/fetchSubTasks.js","sagas/subTasksSaga.js","store/rootSaga.js","store/index.js","config/routes.js","components/templates/Default/Default.styles.js","components/templates/Default/Default.js","components/atoms/Button/Button.styles.js","components/atoms/Button/Button.js","components/atoms/TextInput/TextInput.js","components/atoms/PageHeader/PageHeader.js","components/molecules/SubTask/SubTask.js","components/organisms/SubTasksList/SubTasksList.js","components/organisms/Task/Task.js","components/organisms/TaskList/TaskList.styles.js","components/organisms/TaskList/TaskList.js","components/organisms/TaskForm/TaskForm.js","modules/Tasks/Tasks.js","routes/Home/Home.js","routes/NotFound/NotFound.js","routes/index.js","styles.js","App.js","index.js"],"names":["tasksSetAction","createAction","taskCreateAction","tasksFetchAction","subTasksFetchAction","subTasksSetAction","subTaskDeleteAction","subTaskDeleteSucceedAction","tasksReducer","createReducer","tasksList","allSubTasks","builder","addCase","state","payload","taskId","subTasks","history","createBrowserHistory","reducer","combineReducers","router","connectRouter","tasks","Storage","constructor","key","this","localStorage","getItem","setItem","JSON","stringify","get","parse","set","value","callback","args","Promise","resolve","setTimeout","labels","Array","from","length","map","faker","lorem","word","getRandomNumber","min","max","Math","floor","random","delay","title","task","id","datatype","uuid","createTime","Date","now","subTaskList","sentence","Set","targetTask","find","Error","filter","tasksListSelector","subTasksSelector","fetchTasksSaga","call","fetchTasks","put","createTaskSaga","newTask","createTask","deleteTaskSaga","deleteTask","error","console","deleteEmptyTaskSaga","subTask","subTaskId","subTasksList","isLastSubTask","select","watchTasksActions","takeLatest","takeEvery","t","st","fetchSubTasksSaga","fetchSubTasks","deleteSubTaskSaga","deleteSubtask","watchSubTasksActions","initApp","routerMiddleware","createRouterMiddleware","sagaMiddleware","createSagaMiddleware","middlewares","getDefaultMiddleware","thunk","serializableCheck","immutableCheck","warnAfter","store","configureStore","rootReducer","middleware","enhancers","preloadedState","devTools","trace","run","all","routes","BorderedCenterArea","styled","div","Default","children","Wrapper","button","Button","props","TextInput","initialValue","placeholder","onValueChange","setValue","useState","handleTextInputChange","useCallback","event","target","useEffect","type","onChange","defaultProps","Header","SubTask","dispatch","useDispatch","onRemoveClick","onClick","label","PropTypes","string","isRequired","arrayOf","SubTasksList","safeSubTasksSelector","useSelector","Task","onFetchSubtasks","List","ul","TasksList","TaskForm","initialTitle","setTitle","onCreate","TasksPage","PageHeader","TaskList","Home","Tasks","NotFound","to","Routes","path","component","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9a6f204.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const tasksSetAction = createAction('tasks/set');\nexport const taskCreateAction = createAction('task/create');\nexport const tasksFetchAction = createAction('tasks/fetch');\n\nexport const subTasksFetchAction = createAction('subtasks/fetch');\nexport const subTasksSetAction = createAction('subtasks/set');\nexport const subTaskDeleteAction = createAction('subTask/delete');\n\nexport const subTaskDeleteSucceedAction = createAction('subTask/delete/success');\n","import { createReducer } from '@reduxjs/toolkit';\nimport { tasksSetAction, subTasksSetAction } from './actions';\n\nconst initialTasksState = {\n  tasksList: [],\n  allSubTasks: {},\n};\n\nconst tasksReducer = createReducer(initialTasksState, builder => {\n  builder.addCase(tasksSetAction, (state, { payload }) => ({\n    ...state,\n    tasksList: payload,\n  }));\n  builder.addCase(subTasksSetAction, (state, { payload }) => ({\n    ...state,\n    allSubTasks: {\n      ...state.allSubTasks,\n      [payload.taskId]: payload.subTasks,\n    },\n  }));\n});\n\nexport default tasksReducer;\n","import { createBrowserHistory } from 'history'\nimport { combineReducers } from '@reduxjs/toolkit'\nimport { connectRouter } from 'connected-react-router'\nimport tasksReducer from 'reducers/tasksReducer/tasksReducer';\n\nconst history = createBrowserHistory();\n\nconst reducer = combineReducers({\n  router: connectRouter(history),\n  tasks: tasksReducer,\n});\n\nexport { history }\n\nexport default reducer\n","class Storage {\n  key = null\n\n  constructor(key) {\n    this.key = key\n    if (!localStorage.getItem(this.key)) localStorage.setItem(this.key, JSON.stringify([]))\n  }\n\n  get() {\n    try {\n      return JSON.parse(localStorage.getItem(this.key))\n    } catch {\n      return null\n    }\n  }\n\n  set(value) {\n    localStorage.setItem(this.key, JSON.stringify(value))\n  }\n}\n\nexport default {\n  tasks: new Storage('tasks'),\n  subTasks: new Storage('subTasks'),\n}\n","export default callback =>\n  (...args) =>\n    new Promise(resolve => setTimeout(() => resolve(callback(...args)), 1500))\n","import faker from 'faker'\n\nexport const labels = Array.from({ length: 10 }).map(() => faker.lorem.word())\n","export const getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min\n","import faker from 'faker';\nimport Storage from 'utils/storage';\nimport delay from 'utils/delay';\nimport { labels } from '../config';\nimport { getRandomNumber } from '../utils';\n\nexport default delay(({ title }) => {\n  const tasks = Storage.tasks.get();\n  const subTasks = Storage.subTasks.get();\n  const task = {\n    id: faker.datatype.uuid(),\n    createTime: Date.now(),\n    title,\n  };\n  const subTaskList = Array.from({ length: getRandomNumber(1, 10) }).map(() => ({\n    id: faker.datatype.uuid(),\n    taskId: task.id,\n    title: faker.lorem.sentence(),\n    labels: [\n      ...new Set(\n        Array.from({ length: getRandomNumber(1, 5) }).map(() => labels[getRandomNumber(0, 9)]),\n      ),\n    ],\n  }));\n\n  Storage.tasks.set([...tasks, task]);\n  Storage.subTasks.set([...subTasks, ...subTaskList]);\n\n  return task;\n});\n","import Storage from 'utils/storage'\nimport delay from 'utils/delay'\n\nexport default delay(() => Storage.tasks.get())\n","import Storage from 'utils/storage';\nimport delay from 'utils/delay';\n\nexport default delay(taskId => {\n  const tasks = Storage.tasks.get();\n\n  const allTasks = Storage.tasks.get();\n  const targetTask = allTasks.find(task => task.id === taskId);\n\n  if (!targetTask) {\n    throw new Error(`Task ${taskId} wasn't found`);\n  }\n\n  Storage.tasks.set([...tasks.filter(task => task.id !== taskId)]);\n\n  return targetTask;\n});\n","export const tasksListSelector = state => state.tasks.tasksList;\n\nexport const subTasksSelector = (state, taskId) => state.tasks.allSubTasks[taskId] || [];\n","import { put, takeEvery, takeLatest, call, select } from 'redux-saga/effects';\nimport { fetchTasks, createTask, deleteTask } from 'api/tasks';\nimport {\n  tasksFetchAction,\n  tasksSetAction,\n  taskCreateAction,\n  subTaskDeleteSucceedAction,\n} from 'reducers/tasksReducer/actions';\nimport { subTasksSelector } from 'reducers/tasksReducer/selectors';\nimport { isLastSubTask } from 'helpers/subTaskHelpers';\n\nexport function* fetchTasksSaga() {\n  const tasks = yield call(fetchTasks);\n\n  yield put(tasksSetAction(tasks));\n}\n\nexport function* createTaskSaga({ payload: newTask }) {\n  yield call(createTask, newTask);\n  yield call(fetchTasksSaga);\n}\n\nexport function* deleteTaskSaga({ payload: taskId }) {\n  try {\n    yield call(deleteTask, taskId);\n    yield call(fetchTasksSaga);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Delete task failed:', error);\n  }\n}\n\nexport function* deleteEmptyTaskSaga({ payload: subTask }) {\n  const { taskId, id: subTaskId } = subTask;\n  const subTasksList = yield select(subTasksSelector, taskId);\n\n  if (isLastSubTask(subTaskId, subTasksList)) {\n    yield call(deleteTaskSaga, { payload: taskId });\n  }\n}\n\nexport function* watchTasksActions() {\n  yield takeLatest(tasksFetchAction, fetchTasksSaga);\n  yield takeEvery(taskCreateAction, createTaskSaga);\n  yield takeEvery(subTaskDeleteSucceedAction, deleteEmptyTaskSaga);\n}\n","export const isLastSubTask = (subTaskId, subTasksList) =>\n  !subTasksList.length ||\n  (subTasksList.length === 1 && subTasksList.find(({ id }) => id === subTaskId));\n","import Storage from 'utils/storage';\nimport delay from 'utils/delay';\n\nexport default delay(subTaskId => {\n  const subTasks = Storage.subTasks.get();\n  const subTask = subTasks.find(t => t.id === subTaskId);\n\n  if (subTask) {\n    Storage.subTasks.set(subTasks.filter(st => st.id !== subTaskId));\n\n    return subTask;\n  }\n\n  throw new Error(`SubTask [${subTaskId}] not found`);\n});\n","import Storage from 'utils/storage'\nimport delay from 'utils/delay'\n\nexport default delay(taskId => {\n  const subTasks = Storage.subTasks.get()\n\n  return subTasks.filter(subTask => subTask.taskId === taskId)\n})\n","import { put, takeEvery, call } from 'redux-saga/effects';\nimport { fetchSubTasks, deleteSubtask } from 'api/subTasks';\nimport {\n  subTasksFetchAction,\n  subTasksSetAction,\n  subTaskDeleteAction,\n  subTaskDeleteSucceedAction,\n} from 'reducers/tasksReducer/actions';\n\nexport function* fetchSubTasksSaga({ payload: taskId }) {\n  const subTasks = yield call(fetchSubTasks, taskId);\n\n  yield put(subTasksSetAction({ taskId, subTasks }));\n}\n\nexport function* deleteSubTaskSaga({ payload: subTask }) {\n  try {\n    const { id: subTaskId, taskId } = subTask;\n\n    yield call(deleteSubtask, subTaskId);\n    // on success delete:\n    yield put(subTaskDeleteSucceedAction(subTask));\n    yield call(fetchSubTasksSaga, { payload: taskId });\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Delete subTask request failed:', error);\n  }\n}\n\nexport function* watchSubTasksActions() {\n  yield takeEvery(subTasksFetchAction, fetchSubTasksSaga);\n  yield takeEvery(subTaskDeleteAction, deleteSubTaskSaga);\n}\n","import { all, takeLatest, call } from 'redux-saga/effects';\nimport { fetchTasksSaga, watchTasksActions } from 'sagas/tasksSaga';\nimport { watchSubTasksActions } from 'sagas/subTasksSaga';\n\nfunction* initApp() {\n  yield call(fetchTasksSaga);\n}\n\nexport default function* () {\n  yield takeLatest('app/init', initApp);\n  yield all([watchTasksActions(), watchSubTasksActions()]);\n}\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { routerMiddleware as createRouterMiddleware } from 'connected-react-router'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer, { history } from './rootReducer'\nimport rootSaga from './rootSaga'\n\nconst routerMiddleware = createRouterMiddleware(history)\nconst sagaMiddleware = createSagaMiddleware()\nconst initialState = {}\nconst enhancers = []\nconst middlewares = [\n  ...getDefaultMiddleware({\n    thunk: false,\n    serializableCheck: false,\n    immutableCheck: { warnAfter: 300 },\n  }),\n  routerMiddleware,\n  sagaMiddleware,\n]\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: middlewares,\n  enhancers,\n  preloadedState: initialState,\n  devTools: { trace: true },\n})\n\nsagaMiddleware.run(rootSaga)\n\nexport { history }\n\nexport default store\n","export const routes = {\n  root: () => '/',\n}\n","import styled from 'styled-components';\n\nexport const BorderedCenterArea = styled.div`\n  width: 500px;\n  margin: 20px auto;\n  padding: 20px;\n  max-width: 100%;\n  border: 1px dashed #a5a2a2;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BorderedCenterArea } from './Default.styles';\n\nconst Default = ({ children }) => <BorderedCenterArea>{children}</BorderedCenterArea>;\n\nDefault.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Default;\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.button``\n","import React from 'react'\nimport { Wrapper } from './Button.styles'\n\nconst Button = props => <Wrapper {...props} />\n\nexport default Button\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextInput = ({ value: initialValue, placeholder, onValueChange }) => {\n  const [value, setValue] = useState(initialValue);\n  const handleTextInputChange = useCallback(\n    event => {\n      setValue(event.target.value);\n      onValueChange(event.target.value);\n    },\n    [onValueChange],\n  );\n\n  // allow rewriting title by parent: subscribe on its change\n  useEffect(() => setValue(initialValue), [initialValue]);\n\n  return (\n    <input type=\"text\" placeholder={placeholder} value={value} onChange={handleTextInputChange} />\n  );\n};\n\nTextInput.defaultProps = {\n  value: '',\n  placeholder: '',\n};\n\nTextInput.propTypes = {\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  onValueChange: PropTypes.func.isRequired,\n};\n\nexport default TextInput;\n","import React from 'react'\n\nconst Header = () => (<h1>Processes</h1>);\n\nexport default Header;","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'components/atoms';\nimport { subTaskDeleteAction } from 'reducers/tasksReducer/actions';\n\nconst SubTask = ({ id, title, labels, taskId }) => {\n  const dispatch = useDispatch();\n  const onRemoveClick = useCallback(\n    () => dispatch(subTaskDeleteAction({ id, taskId })),\n    [dispatch, id, taskId],\n  );\n\n  return (\n    <>\n      <span id={id}>{title}</span>\n      <Button onClick={onRemoveClick}>Remove</Button>\n      <ul>\n        {labels.map(label => (\n          <li key={label}>#{label}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nSubTask.defaultProps = {\n  labels: [],\n};\n\nexport const SubTaskShape = {\n  id: PropTypes.string.isRequired,\n  taskId: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  labels: PropTypes.arrayOf(PropTypes.string),\n};\n\nSubTask.propTypes = SubTaskShape;\n\nexport default SubTask;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport SubTask from 'components/molecules/SubTask/SubTask';\nimport { subTasksSelector } from 'reducers/tasksReducer/selectors';\n\nconst SubTasksList = ({ taskId }) => {\n  const safeSubTasksSelector = useCallback(state => subTasksSelector(state, taskId), [taskId]);\n  const subTasks = useSelector(safeSubTasksSelector);\n\n  return (\n    <ul>\n      {subTasks.map(subTask => (\n        <li key={subTask.id}>\n          <SubTask {...subTask} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nSubTasksList.propTypes = {\n  taskId: PropTypes.string.isRequired,\n};\n\nexport default SubTasksList;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Button } from 'components/atoms';\nimport { subTasksFetchAction } from 'reducers/tasksReducer/actions';\nimport SubTasksList from 'components/organisms/SubTasksList/SubTasksList';\n\nconst Task = ({ title, id }) => {\n  const dispatch = useDispatch();\n  const onFetchSubtasks = useCallback(() => {\n    dispatch(subTasksFetchAction(id));\n  }, [id, dispatch]);\n\n  return (\n    <>\n      <span>{title}</span>\n      <Button onClick={onFetchSubtasks}>View Subtasks</Button>\n      <SubTasksList taskId={id} />\n    </>\n  );\n};\n\nexport const TaskShape = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nTask.propTypes = TaskShape;\n\nexport default Task;\n","import styled from 'styled-components'\n\nexport const List = styled.ul``;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Task, { TaskShape } from 'components/organisms/Task/Task';\nimport { List } from './TaskList.styles';\n\nconst TasksList = ({ tasks }) => (\n  <List>\n    {tasks.map(task => (\n      <li key={task.id}>\n        <Task {...task} />\n      </li>\n    ))}\n  </List>\n);\n\nTasksList.propTypes = {\n  tasks: PropTypes.arrayOf(PropTypes.shape(TaskShape)).isRequired,\n};\n\nexport default TasksList;\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from '../../atoms';\nimport TextInput from '../../atoms/TextInput/TextInput';\nimport { taskCreateAction } from '../../../reducers/tasksReducer/actions';\n\nconst TaskForm = ({ title: initialTitle }) => {\n  const [title, setTitle] = useState(initialTitle);\n  const dispatch = useDispatch();\n  const onCreate = useCallback(() => {\n    dispatch(taskCreateAction({ title }));\n    setTitle('');\n  }, [title, dispatch]);\n\n  return (\n    <div>\n      <TextInput value={title} placeholder=\"task title\" onValueChange={setTitle} />\n      <Button onClick={onCreate}>Create</Button>\n    </div>\n  );\n};\n\nTaskForm.defaultProps = {\n  title: '',\n};\n\nTaskForm.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default TaskForm;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { TaskList } from 'components/organisms';\nimport PageHeader from '../../components/atoms/PageHeader/PageHeader';\nimport { tasksListSelector } from '../../reducers/tasksReducer/selectors';\nimport TaskForm from '../../components/organisms/TaskForm/TaskForm';\n\nconst TasksPage = () => {\n  const tasks = useSelector(tasksListSelector);\n\n  return (\n    <>\n      <PageHeader />\n      <main>\n        <TaskForm />\n        <TaskList tasks={tasks} />\n      </main>\n    </>\n  );\n};\n\nexport default TasksPage;\n","import React from 'react'\nimport { DefaultTemplate } from 'components/templates'\nimport { Tasks } from 'modules'\n\nconst Home = () => (\n  <DefaultTemplate>\n    <Tasks />\n  </DefaultTemplate>\n)\n\nexport default Home\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { DefaultTemplate } from 'components/templates'\nimport { routes } from 'config/routes'\n\nconst NotFound = () => (\n  <DefaultTemplate>\n    <h1>Page not found</h1>\n    <Link to={routes.root()}>Go to home</Link>\n  </DefaultTemplate>\n)\n\nexport default NotFound\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { routes } from 'config/routes'\nimport Home from './Home/Home'\nimport NotFound from './NotFound/NotFound'\n\nconst Routes = () => (\n  <Switch>\n    <Route path={routes.root()} component={Home} />\n    <Route component={NotFound} />\n  </Switch>\n)\n\nexport default Routes\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n  * {\n    padding: 0;\n    margin: 0;\n    outline: none;\n\n    &,\n    &:before,\n    &:after {\n      box-sizing: border-box;\n    }\n  }\n\n  body {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    font-family: 'Helvetica', sans-serif;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.4;\n  }\n\n  a {\n    text-decoration: none;\n\n    &,\n    &:hover {\n      color: inherit;\n    }\n  }\n\n  p {\n    margin: 0;\n  }\n\n  ul,\n  ol {\n    margin: 0;\n    list-style: none;\n  }\n\n  img {\n    max-width: 100%;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 0;\n  }\n\n  pre {\n    margin: 0;\n  }\n\n  #root {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n  }\n`\n","import React, { useEffect } from 'react';\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport store, { history } from 'store'\nimport Routes from 'routes'\nimport GlobalStyle from './styles';\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch({ type: 'app/init' });\n  }, []);\n\n  return (<>\n    <GlobalStyle />\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <Routes />\n      </ConnectedRouter>\n    </Provider>\n  </>);\n};\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}